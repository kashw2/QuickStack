name: Terraform

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - terraform/**
  push:
    branches:
      - main
    paths:
      - terraform/**

defaults:
  run:
    working-directory: ./terraform

jobs:
  plan:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -recursive

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan -refresh=false

  apply:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}

    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -recursive

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve -refresh=false
