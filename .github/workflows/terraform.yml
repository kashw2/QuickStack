name: Terraform

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - terraform/b2b/**
  push:
    branches:
      - main
    paths:
      - terraform/b2b/**

defaults:
  run:
    working-directory: ./terraform

env:
  ARM_CLIENT_ID: ${{ secrets.AZ_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZ_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZ_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZ_TENANT_ID }}
  TF_VAR_GITHUB_TOKEN: ${{ github.token }}

jobs:
  infracost:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    env:
      TF_ROOT: .

    steps:
      - name: setup infracost
        uses: infracost/actions/setup@v2
        with:
          api-key: ${{ secrets.INFRACOST_API_KEY }}

      - name: checkout base branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.base.ref }}

      - name: generate cost breakdown
        run: infracost breakdown --path=${TF_ROOT} --format=json --out-file=/tmp/infracost-base.json

      - name: checkout pr branch
        uses: actions/checkout@v3

      - name: generate cost diff
        run: infracost diff --path=${TF_ROOT} --format=json --compare-to=/tmp/infracost-base.json --out-file=/tmp/infracost.json

      - name: post comment
        run: infracost comment github --path=/tmp/infracost.json --repo=$GITHUB_REPOSITORY --github-token=${{github.token}} --pull-request=${{github.event.pull_request.number}} --behavior=update
  security:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - uses: actions/checkout@v3

      - name: tfsec
        uses: aquasecurity/tfsec-pr-commenter-action@v1.2.0
        with:
          github_token: ${{ github.token }}
  plan:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/b2b

    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: init
        run: terraform init

      - name: validate
        run: terraform validate

      - name: plan
        run: terraform plan -refresh=false
  apply:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform/b2b

    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0

      - name: init
        run: terraform init

      - name: validate
        run: terraform validate

      - name: apply
        run: terraform apply -auto-approve -refresh=false
